org: unknown2024
app: planning-poker-lambdas
service: planning-poker-lambdas

useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: ${env:ARN_DYNAMODB_TABLE}

    - Effect: Allow
      Action: ssm:GetParameters
      Resource: ${env:ARN_SSM_PARAMETER}

    - Effect: Allow
      Action: SNS:Publish
      Resource: ${env:ARN_SNS_LAMBDA_ERROR_ALERTS}

  httpApi:
    authorizers:
      cognitoJWT:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: ${env:COGNITO_URL}
        audience:
          - ${env:COGNITO_CLIENT_ID}

functions:
  hello:
    handler: lambdas/hello.handler
    events:
      - httpApi:
          path: /
          method: get

  getUser:
    handler: lambdas/get-user.handler
    events:
      - httpApi:
          path: /users/{id}
          method: get

  getUsers:
    handler: lambdas/get-users.handler
    events:
      - httpApi:
          path: /users
          method: get

  meUser:
    handler: lambdas/me-user.handler
    events:
      - httpApi:
          path: /me-user
          method: get
          authorizer:
            name: cognitoJWT

  sendEmail:
    handler: lambdas/send-email.handler
    events:
      - httpApi:
          path: /send-email
          method: get

  createUser:
    handler: lambdas/create-user.handler
    events:
      - httpApi:
          path: /users
          method: post

  updateUser:
    handler: lambdas/update-user.handler
    events:
      - httpApi:
          path: /users/{id}
          method: put

  deleteUser:
    handler: lambdas/delete-user.handler
    events:
      - httpApi:
          path: /users/{id}
          method: delete
